version: 2
jobs:
  # Deploy to production site
  # Note that we need a custom SSH config to let rsync know
  # how to reach the production site.
  build:
    docker:
      - image: circleci/ruby:2.6.0-node-browsers
    environment:
      - JEKYLL_ENV: "production"
    steps:
      - checkout
      - run: bundle clean --force
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-
            - v1-gem-cache-{{ arch }}-
      - run: bundle install
      - save_cache:
          paths:
            - ~/.bundle
          key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - add_ssh_keys:
          fingerprints:
            - "af:2d:fd:58:99:12:3d:68:4e:4b:b1:d8:0f:8f:44:64"
      - run: ssh-keyscan -p $PORT $HOST-H >> ~/.ssh/known_hosts
      - run: which rsync || sudo apt-get install rsync
      - run: bundle exec jekyll build --config _prod.yml
      - run: bundle exec htmlproofer ./_site --assume-extension --check-html --allow-hash-href --empty-alt-ignore --only-4xx 
      - run: 
          name: Push on server
          command: |
            i=1; until rsync --delete -avP -e 'ssh -p $PORT' ./_site/ $USER@$HOST:/var/www/html/; do echo $((i++)) && sleep 1; done

workflows:
  version: 2
  on-commit-build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
  
